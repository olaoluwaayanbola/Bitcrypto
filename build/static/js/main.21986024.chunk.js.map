{"version":3,"sources":["services/cryptoApi.js","services/NewsApi.js","components/Loader/Loader.jsx","components/News/News.jsx","components/Crptocard/Cryptocard.jsx","components/Crytocurrencies/Cryptocurrencies.jsx","components/Homepage/Homepage.jsx","images/cryptocurrency.png","components/Navbar.jsx","LineChart/LineChart.jsx","components/Cryptodetails/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","process","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timeperiod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","Loader","className","CircularProgress","color","demoImage","Text","Typography","Title","Option","Select","News","simplified","useState","setNewsCategory","data","cryptoNews","isLoading","gutter","span","showSearch","placeholder","optionFilterProp","onChange","value","filterOption","input","option","children","toLowerCase","indexOf","coins","map","currency","name","news","i","xs","sm","lg","hoverable","href","target","rel","level","src","image","thumbnail","contentUrl","alt","description","length","substring","provider","moment","datePublished","startOf","fromNow","Cryptocard","cryptos","style","marginTop","to","uuid","borderRadius","fontSize","title","rank","extra","iconUrl","millify","price","marketCap","change","Cryptocurrencies","simp","cryptosList","isFetching","setCryptos","searchTerm","setSearchTerm","useEffect","filteredData","filter","item","includes","event","Homepage","globalStats","stats","Grid","container","spacing","columns","rowSpacing","columnSpacing","md","totalExchanges","totalMarketCap","total24hVolume","Navbar","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","handleResize","window","innerWidth","addEventListener","removeEventListener","icon","size","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimeperiod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","supply","confirmed","CheckOutlined","StopOutlined","ExclamationCircleOutlined","total","circulating","symbol","defaultValue","date","HTMLReactParser","links","link","type","App","exact","path","textAlign","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.21986024.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\n// Note: Change v1 to v2 on rapid api\n\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': process.env.REACT_APP_CRYPTO_RAPIDAPI_HOST,\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\n};\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n\n    // Note: Change the coin price history endpoint from this - `coin/${coinId}/history/${timeperiod} to this - `coin/${coinId}/history?timeperiod=${timeperiod}`\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history?timeperiod=${timeperiod}`),\n    }),\n\n    // Note: To access this endpoint you need premium plan\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges'),\n    }),\n  }),\n});\n\nexport const {\n  useGetCryptosQuery,\n  useGetCryptoDetailsQuery,\n  useGetExchangesQuery,\n  useGetCryptoHistoryQuery,\n} = cryptoApi;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoNewsHeaders = {\n  'x-bingapis-sdk': 'true',\n  'x-rapidapi-key': process.env.REACT_APP_RAPIDAPI_KEY,\n  'x-rapidapi-host': process.env.REACT_APP_NEWS_RAPIDAPI_HOST,\n};\n// const options = {\n//   method: 'GET',\n//   url: 'https://bing-news-search1.p.rapidapi.com/news/search',\n//   params: {q: '<REQUIRED>', safeSearch: 'Off', textFormat: 'Raw', freshness: 'Day'},\n//   headers: {\n//     'X-BingApis-SDK': 'true',\n//     'X-RapidAPI-Host': 'bing-news-search1.p.rapidapi.com',\n//     'X-RapidAPI-Key': '5d261b28demsh4c85df60f6a8ffdp130a96jsnf4e0b3a53417'\n//   }\n// };\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: 'cryptoNewsApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_NEWS_API_URL }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React from 'react';\nimport { Spin } from 'antd';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nconst Loader = () => (\n  <div className=\"loader\">\n      <CircularProgress color=\"success\" />\n  </div>\n);\n\nexport default Loader;\n","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\nimport { useGetCryptosQuery } from '../../services/cryptoApi';\nimport { useGetCryptoNewsQuery } from '../../services/NewsApi';\nimport Loader from '../Loader/Loader';\n// import Card from '@mui/material/Card';\n// import CardContent from '@mui/material/CardContent';\n// import CardMedia from '@mui/material/CardMedia';\n// import Typography from '@mui/material/Typography';\n// import { CardActionArea } from '@mui/material';\n\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews,isLoading } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 10 : 20 });\n\n  if (isLoading){\n    return < Loader></ Loader>\n   };\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\n            {data?.data?.coins?.map((currency) => <Option value={currency.name}>{currency.name}</Option>)}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\n                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n              </div>\n              <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n                </div>\n                <Text>{moment(news.datePublished).startOf().fromNow()}</Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React, { useEffect, useState } from 'react';\r\nimport millify from 'millify';\r\nimport Loader from '../Loader/Loader';\r\nimport { Card, Row, Col, Input } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Cryptocard= ({cryptos}) => {\r\n  return (\r\n    <div className='Crytocard-top' style={{marginTop:\"2%\",}}>\r\n        <Row gutter={[32, 32]} className=\"crypto-card-container\" >\r\n            {cryptos?.map((currency) => (\r\n            <Col\r\n                xs={24}\r\n                sm={12}\r\n                lg={6}\r\n                className=\"crypto-card\"\r\n                key={currency.uuid}\r\n            >\r\n\r\n                {/* Note: Change currency.id to currency.uuid  */}\r\n                <Link key={currency.uuid} to={`/crypto/${currency.uuid}`}>\r\n                <Card\r\n                    style={{\r\n                        borderRadius:\"8px\",\r\n                        fontSize:\"14px\",\r\n                        color:\"rgb(15,15,15)\",\r\n                        }}\r\n                    title={`${currency.rank}. ${currency.name}`}                    \r\n                    extra={<img className=\"crypto-image\" src={currency.iconUrl} />}\r\n\r\n                    hoverable\r\n                >\r\n                    <p>Price: {millify(currency.price)}</p>\r\n                    <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                    <p>Daily Change: {currency.change}%</p>\r\n                </Card>\r\n                </Link>\r\n            </Col>\r\n            ))}\r\n        </Row>\r\n        \r\n    </div>\r\n)}\r\nexport default  Cryptocard;\r\n       \r\n          ","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\nimport Cryptocard from '../Crptocard/Cryptocard';\nimport { useGetCryptosQuery } from '../../services/cryptoApi';\nimport Loader from '../Loader/Loader';\n\nconst Cryptocurrencies = ({ simp}) => {\n  const count = simp ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n  const handle = (event)=> setSearchTerm(event.target.value.toLowerCase())\n  \n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n\n    const filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simp && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Cryptocurrency\"\n            onChange={handle}\n            style={{borderRadius:\"4px\",}}\n          />\n        </div>\n      )}\n      <Cryptocard cryptos={cryptos}></Cryptocard>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import './Homepage.css'\nimport News from '../News/News';\nimport millify from 'millify';\nimport Loader from '../Loader/Loader';\nimport { Grid } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport Cryptocurrencies from '../Crytocurrencies/Cryptocurrencies';\nimport { useGetCryptosQuery } from '../../services/cryptoApi';\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n  if (isFetching) return <Loader />;\n\n  return (\n    <div className='Home_Container'>\n      <div className=\"Title\">\n        <h2>Global Crypto Information</h2>\n      </div>\n      <Grid container spacing={2} columns={16} rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n          <Grid item xs={16} md={8}  lg={4}>\n              <div className=\"card-info\">\n                <h3>Total Cryptocurrencies</h3>\n                <span>\n                 \n                </span>\n              </div>\n          </Grid>\n          <Grid item xs={16} md={8} lg={4}>\n              <div className=\"card-info\">\n                <h3>Total Exchanges</h3>\n                <span>{millify(globalStats.totalExchanges)}</span>\n              </div>\n          </Grid>\n          <Grid item xs={16} md={8} lg={4}>\n              <div className=\"card-info\">\n                <h3>Total Market Capital</h3>\n                <span>{`$${millify(globalStats.totalMarketCap)}`} </span>\n              </div>\n          </Grid>\n          <Grid item xs={16} md={8} lg={4}>\n              <div className=\"card-info\">\n                <h3>Total 24h Volume</h3>\n                <span>{`$${millify(globalStats.total24hVolume)}`}</span>\n              </div>\n          </Grid>\n      </Grid>\n      <Grid container spacing={2} columns={16} rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\n        <Grid item className='CryptocurrenciesBox'>\n        <Cryptocurrencies simp = {true}  />\n        </Grid>\n        <span className='Show'>\n          <Link to=\"/cryptocurrencies\" className='Show'>Show more</Link>\n        </span>\n      </Grid>\n      <News simplified />\n    </div>\n  );\n};\n\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">Cryptoverse</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\">\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />}>\n          <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\n        </Menu.Item>\n        <Menu.Item icon={<MoneyCollectOutlined />}>\n          <Link to=\"/exchanges\">Exchanges</Link>\n        </Menu.Item>\n        <Menu.Item icon={<BulbOutlined />}>\n          <Link to=\"/news\">News</Link>\n        </Menu.Item>\n      </Menu>\n      )}</div>\n  );\n};\n\nexport default Navbar;\n","\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n\n  }\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../../services/cryptoApi';\nimport Loader from '../Loader/Loader';\nimport LineChart from '../../LineChart/LineChart';\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timeperiod, setTimeperiod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\n  const cryptoDetails = data?.data?.coin;\n  \n  if (isFetching) return <Loader />;\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails?.price && millify(cryptoDetails?.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails?.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails?.volume && millify(cryptoDetails?.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails?.marketCap && millify(cryptoDetails?.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${cryptoDetails?.allTimeHigh?.price && millify(cryptoDetails?.allTimeHigh?.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails?.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails?.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails?.supply?.confirmed ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${cryptoDetails?.supply?.total && millify(cryptoDetails?.supply?.total)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${cryptoDetails?.supply?.circulating && millify(cryptoDetails?.supply?.circulating)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.symbol}) Price\n        </Title>\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\n      </Col>\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails?.price)} coinName={cryptoDetails?.name} />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">{link.type}</Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport { Exchanges, Homepage, News, Cryptocurrencies, CryptoDetails, Navbar } from './components';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"navbar\">\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/exchanges\">\n              <Exchanges />\n            </Route>\n            <Route exact path=\"/cryptocurrencies\">\n              <Cryptocurrencies />\n            </Route>\n            <Route exact path=\"/crypto/:coinId\">\n              <CryptoDetails />\n            </Route>\n            <Route exact path=\"/news\">\n              <News />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n      <div className=\"footer\">\n        <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>Copyright © 2021\n          <Link to=\"/\">\n            Cryptoverse Inc.\n          </Link> <br />\n          All Rights Reserved.\n        </Typography.Title>\n        <Space>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/exchanges\">Exchanges</Link>\n          <Link to=\"/news\">News</Link>\n        </Space>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/NewsApi';\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n  // Adding the api middleware enables caching, invalidation, polling,\n  // and other useful features of `rtk-query`.\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(cryptoApi.middleware),\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(cryptoNewsApi.middleware),\n});\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport store from './app/store';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}